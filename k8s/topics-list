https://github.com/devopsproin/certified-kubernetes-administrator/tree/main

namespaces
node
pod
daemonset
replicaset
deployment
services
storage ==> emptyDir, hostPath, persistentDisk(static provisioing), persistentDisk(dynamic provisioing)
statefulset  ==> mysql, use pv, pvc, sc
configmap, secret
cluster setup
taint toleration
cluster maintainence ==> drain, cordon, uncordon
scheduling pod
readiness and liveliness probe
limitrange
resource quota --> namespace level cpu and memory limits
metric-server ==> monitor cluster ==> kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml (in minikube  minikube addons enable metrics-server)
live logs kubectl logs -f app-7c754b8767-6p5vs
application lifecycle management ==> rolling updates, initcontainer, multicontainer
helm
argocd
multicontainer ==> init container, side car container
networking policies  ==> calico
jobs and cronjobs
static pods
daemonset
security
service account
security-context ==> change default user. default user is root
rbac
master: etcd, kube-apiserver, kube controller manager, kube schedular
worker: kubelet, kubeproxy, container runtime
container runtime : docker, containerd, rkt
support different runtime with container runtime interface (CRI)
docker shim
etcd stores information about cluster, nodes, configs, secrets, accounts,   roles, bindings, others
kube api server: authenticate user, validate request, retrieve data, update etcd , schedular, kubelet
create user: https://www.youtube.com/watch?v=r_fSTn_Ixuk,  https://www.youtube.com/watch?v=EUGfQS2Fu78, https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/
headless services
stateful set ==> demo
ingress ==> demo
secure k8s ==> secure api server, rbac, network policies, encryption at rest(etcd), secure images, cluster monitoring, frequent upgrades
admission controller ==> Kyverno

pending
elk stack in k8s
service mesh implementation using istio
